%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: JavaScriptU3D
file_extensions: js
scope: source.javaScriptU3D

variables:
  numeric: '-?[0-9]+\.?[0-9]*'
  boolean: 'true|false|null'
  
  protection: 'public|protected|private|static'

  name: '\b[_a-zA-Z0-9]+\b'
  var_name: '\b_?[a-z][_a-zA-Z0-9]*\b'
  class_name: '\b_?[A-Z][_a-zA-Z0-9]*\b'

contexts:
  main:
    # Comments begin with a '//' and finish at the end of the line
    - match: '//'
      scope: punctuation.definition.comment.javaScriptU3D
      push: line_comment

    - match: '/\*'
      scope: punctuation.definition.comment.javaScriptU3D
      push: block_comment

    - match: '"'
      scope: punctuation.definition.string.begin
      push: double_quoted_string

    - match: '(\#[a-zA-Z0-9]+)\b'
      captures:
        1: variable.language.javaScriptU3D

    - match: '(import)\b'
      captures:
        1: variable.language.javaScriptU3D

    - match: '\b{{protection}}\b'
      scope: variable.language.javaScriptU3D

    - match: '\b(var|if|else|in)\b'
      scope: keyword.control.javaScriptU3D

    - match: '&&'
      scope: keyword.control.javaScriptU3D

    - match: '\|\|'
      scope: keyword.control.javaScriptU3D

    - match: '\b(function)\b'
      scope: variable.language.javaScriptU3D

    - match: '\=({{boolean}})'
      captures:
        1: constant.language.boolean.javaScriptU3D

    - match: '\b({{numeric}})\b'
      captures:
        1: constant.numeric.javaScriptU3D

    - match: ':({{name}})'
      captures:
        1: entity.type.javaScriptU3D

    - match: '(new) ({{name}})'
      captures:
        1: keyword.control.javaScriptU3D
        2: entity.type.javaScriptU3D

    - match: '\b(class)\b'
      captures:
        1: variable.language.javaScriptU3D

    - match: '\b(extends)\b'
      captures:
        1: variable.language.javaScriptU3D

    - match: '\b(this)\b'
      captures:
        1: variable.language.this.javaScriptU3D

    - match: '\b(super)\b'
      captures:
        1: variable.language.super.javaScriptU3D

    - match: '\b(switch)\('
      captures:
        1: keyword.control.javaScriptU3D

    - match: '\b(for)\('
      captures:
        1: keyword.control.javaScriptU3D

    - match: '\b(while)\('
      captures:
        1: keyword.control.javaScriptU3D

    - match: '\b({{name}})\('
      captures:
        1: entity.name.function.javaScriptU3D

    - match: '\b({{name}})\.<'
      captures:
        1: entity.name.function.javaScriptU3D

    - match: '{{class_name}}'
      scope: support.class.javaScriptU3D

    - match: '\breturn\b'
      scope: keyword.control.javaScriptU3D

    - match: '\bcase\b'
      scope: keyword.control.javaScriptU3D

    - match: '\bbreak\b'
      scope: keyword.control.javaScriptU3D

    - match: '\bdefault\b'
      scope: keyword.control.javaScriptU3D

    - match: '\bdo\b'
      scope: keyword.control.javaScriptU3D

    - match: '{{var_name}}'
      scope: variable.other.javaScriptU3D

  line_comment:
    - meta_scope: comment.line.javaScriptU3D
    - match: $
      pop: true

  block_comment:
    - meta_scope: comment.block.javaScriptU3D
    - match: '\*/'
      pop: true

  string_begin:
    - match: '"'
      scope: string.quoted.double.javaScriptU3D
      push: double_quoted_string

  double_quoted_string:
    - match: '[^"\\]*'
      scope: string.quoted.double.javaScript
    - match: '\\.'
      scope: constant.character.escape.javaScript
    - match: '"|$'
      scope: punctuation.definition.string.end.javaScript
      pop: true